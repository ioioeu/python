PYTHON01-DAY05


for 语句
  作用：
    用来'遍历'可迭代对象的数据元素

遍历：每个数据都经历一次
可迭代对象：能依次获取数据元素的对象
可迭代对象包括：
  字符串 str
  列表 list
  元组 tuple
  字典 dict
  集合 set
  ...

for 语句语法：
  for 变量列表 in 可迭代对象：
      语句块1
  else:
  	语句块2

示例：
s = 'ABCDE'
for ch in s:
	print('ch -->',ch)
else:
	print('for 语句执行else字句')
print('program end')

练习：
  任意输入一个字符串，判断这个字符串中有几个空格，不允许用s.count方法，建议用for语句

s = input('enter:')
i = 0
for a in s:
	if a == ' '
		i += 1
print('字符串有',i,'个空格')

for 语法说明：
  1.可迭代对象每次提供一个元素依次赋值给变量列表中的变量，赋值完毕后执行语句块1，重复执行次步骤，直到可迭代对象不能提供数据为止
  2.可迭代对象提供所有元素后，执行else字句，然后退出for语句
  3.else可省略
  4.循环内部使用break终止循环时，else字句不会执行(见练习4标准方法)


range 函数
  格式见：
    >>> help(range)
函数：
  range(stop) 从零开始，每次生成一个整数后加1，直到stop为止(不包含stop)
  range(start, stop[,step]) 从start开始，每次生成一个整数后移动step，直到stop为止(不包含stop，且step可以是负整数)
作用：
  用来创建一个生成一系列整数的可迭代对象(也叫整数生成器)
说明：
  range返回的对象是可迭代对象，可用于for语句中
示例：
  range(4)      # 0,1,2,3
  range(3,6)    # 3,4,5
  range(1,10,2) # 1,3,5,7,9
  range(5,0,-2) # 5,3,1
  range(4,0)    # 空

示例：
for x in range(4):
    print(x)
>>>0
1
2
3

练习1：
用for语句打印1~20的整数，打印在一行

for x in range(1,21):
    print(x,end=' ')
print()

练习2：
1.求100以内有哪些整数与自身+1的乘积再对11求余结果等于8？
for x in range(0,100):
    if x*(x+1)%11 == 8:
        print(x)

2.计算1+3+5+7+...+99 的和用while和for语句两种方法来实现
#1
s=0
for x in range(1,100,2):
    s += x
print('1+3+5+7+...+99=',s)
#2
s=0
a=1
while a <= 99:
    s += a
    a += 2
print('1+3+5+7+...+99=',s)


for 语句嵌套：
  for x in 'ABC':
      for y in '123':
      	  print(x+y)

# 思考 count 的值是多少
count = 0
for x in range(5)
    for y in range(10)
       count += 1
print(count)  # 50

练习：
1.写程序，输入一个整数n代表正方形的长度，打印组成的正方形
如
  输入：5
  打印：
  1 2 3 4 5
  2 3 4 5 6
  3 4 5 6 7
  4 5 6 7 8
  5 6 7 8 9

a = int(input('enter number:'))
#方法1：while语句 + for语句
b = 1
while b <= a:
    for x in range(b,a+b):
        print('%2d' % x,end=' ') # 每个数占两个字符宽度
    else:
    	print()
    b += 1
#方法2：for语句
for b in range(1,a+1): # b代表当前行数
	for x in range(b,a+b):
		print('%2d' % x,end=' ')
	else:
    	print()


continue 语句
  作用：
    用于循环语句中，不再执行本次循环内continue之后的语句，重新开始一次新的循环
  说明：
    1.在 while 语句中，执行continue语句将会直接跳转到while语句的真值表达式处重新判断循环条件
    2.在for语句中，执行从continue语句，将会从迭代对象中取下一个元素，
  示例：
  for x in range(5): 
      if x == 2:
          continue
      print(x)  # 当x=2时，print(2)不会被执行，而是直接回到for语句绑定下一个元素

练习1：
  输入一个整数用begin绑定，再输入一个整数用end绑定，打印begin~end(include end)的所有偶数

begin = int(input('enter begin number:'))
end = int(input('enter end number:'))
for x in range(begin,end+1): 
	if x % 2 != 0:
		continue
	print(x)

练习2：
  实现打印10以内的偶数
# 用while语句
i = 0
while i < 10:
    print(i)
    i += 2

# 用while和continue语句
i = 0
while i < 10:
	if 1 % 2 ==1:
	    i += 1  # 在continue之前改变i值
	    continue
    print(i)
    i += 1

# 用for语句 
for x in range(0,10,2)
    print(x)

练习3：
  求1~100(include 100)之间所有不能被5,7,11整除的数的和是多少？
a = 0
for x in range(1,101):
    if x % 5 !=0 and x % 7 !=0 and x % 11 !=0:
	    a += x
#   if x % 5 == 0 or x % 7 ==0 or x % 11 ==0:
#       continue
#   a += x
print(a) 


循环总结：
  while 语句
  for 语句
      - 字符串
      - range() 函数
  break 语句
  continue 语句

练习4：
输入一个整数n，判断是不是素数(prime只能被1和自身整除的数时素数)
#我的方法
n = int(input('enter number:'))
for x in range(2,n):
    if n % x == 0:
        print('您输入的不是素数') 
        break
    elif x == n-1:
        print('您输入的是素数')

#标准方法
n = i nt(input('enter number:'))
if n < 2:
	print('您输入的不是素数') 
	exit()  #退出程序
for x in range(2,n): 
    if n % x == 0:
        print('您输入的不是素数') 
        break
else:
    print('您输入的是素数')

# 传统方法
n = int(input('enter number:'))
flag = True  # True代表是素数
for x in range(2,n):
    if n % x == 0: 
        flag = False
        break
if flag == True:
    print('您输入的是素数')
else:
    print('您输入的不是素数')


列表 list
  列表是由一系列特定元素组成的，元素和元素之间没有任何关联关系，但他们之间有先后顺序关系
  列表是一种容器
  列表是序列的一种
  列表是可以被改变的序列

python中的序列类型简介(sequence)
  字符串 str
  列表 list
  元组 tuple
  字节串 bytes
  字节数组 bytearray

创建空列表的字面值
  L = []  # L绑定空列表
    # >>> L = []
    # >>> L
    # []
    # >>>type(L)
    # <class 'list'>

创建非空列表：
  L = [1, 2, 3, 4]  
  L = ['beijing', 'shanghai', 'shenzhen']
  L = [1, 'two', 3, '四']
  L = [1, 2, [3.1, 3.2], 4]  # len(L) >>> 4

列表的构造(创建)函数list
  list()  生成一个空的列表，等同于[]
  list(iterable)  用可迭代对象创建一个列表

示例：
  list()  # []
  list(range(1,10,2))  # [1,3,5,7,9]
  list('ABCD')  # ['A', 'B', 'C', 'D']
    
列表的运算：
  算术运算符
    +  +=  *  *=
  + 用于拼接列表
    x = [1,2,3]
    y = [4,5,6]
    z = x + y  # z = [1,2,3,4,5,6]

  += 用于原列表与'右侧可迭代对象'进行拼接，生成新列表
    x = [1,2,3]
    x += [4,5,6]  # x = [1,2,3,4,5,6]
    
    x = [1,2,3]
    x += 'ABC'  # X = [1,2,3,A,B,C]

  * 生成重复的列表
    x = [1,2,3] * 2  # x = [1,2,3,1,2,3]

  *= 生成重复的列表，同时绑定原列表
    x = [1,2,3]
    x *= 2  # x = [1,2,3,1,2,3]

列表的比较运算：
  运算符:
    <  <=  >  >=  ==  !=
    x = [1,2,3]
    y = [2,3,4]

    x != y     # True
    x > [1,2]  # True
    x < y      # True
    [1,3,2] > [1,2,3]  # True
    ['AB','CD'] > ['AC','BD']  # False
    [1,'two'] > ['two',1]  # TypeError


2.用循环语句生产如下字符串
'ABC......XYZ'
'AaBbCc......XxYyZz'
提示：
  用ord和chr函数结合循环语句

3.算出 100~999 以内的水仙花数(Narcissistic number)
水仙花数是指：
   如： 153 = 1**3 + 5**3 + 3**3

for x in range(100,1000):
    a = int(str(x)[0])
    b = int(str(x)[1])
    c = int(str(x)[2])
    s = a**3 +b**3 + c**3 
    if s == x:
        print(s)











